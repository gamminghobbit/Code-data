---
title: "Client Report - If not now, when?"
subtitle: "Unit 3 Task 3"
author: "William Hardy"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import numpy as np
import sqlite3
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
df = pd.read_json("https://github.com/byuidatascience/data4missing/raw/master/data-raw/flights_missing/flights_missing.json")
```

## QUESTION 1

__What is the best month to fly if you want to avoid delays of any length?__ Describe the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month.

_the best month to travel by plane with the least amount of weather delays are september with 15.89% of flights delayed by the weather, november with 15.95%, and the third highest is October with 17.16%._

```{python}
df.replace(["", "n/a"], np.nan, inplace=True)

# Fix any placeholder values
df['num_of_delays_late_aircraft'] = df['num_of_delays_late_aircraft'].replace(-999, np.nan)

# Make sure relevant columns are numeric
delay_cols = [
    'num_of_delays_carrier',
    'num_of_delays_weather',
    'num_of_delays_nas',
    'num_of_delays_security',
    'num_of_delays_late_aircraft'
]
for col in delay_cols:
    df[col] = pd.to_numeric(df[col], errors='coerce')

# Total delays column
df['total_delays'] = df[delay_cols].sum(axis=1)

# Group by month and summarize
monthly_summary = df.groupby('month').agg(
    total_flights=('num_of_flights_total', 'sum'),
    total_delays=('total_delays', 'sum')
).reset_index()

# Calculate proportion of flights delayed
monthly_summary['delay_proportion'] = monthly_summary['total_delays'] / monthly_summary['total_flights']
from lets_plot import *

# Order months correctly
month_order = [
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
]

# Convert to ordered category
monthly_summary['month'] = pd.Categorical(monthly_summary['month'], categories=month_order, ordered=True)
monthly_summary = monthly_summary.sort_values('month')

# Plot
ggplot(monthly_summary, aes(x='month', y='delay_proportion')) + \
    geom_bar(stat='identity', fill='green') + \
    ggtitle("Proportion of Flights Delayed by Month") + \
    xlab("Month") + ylab("Proportion Delayed") + \
    theme(axis_text_x=element_text(angle=45, hjust=1))

```

